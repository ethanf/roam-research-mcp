openapi: 3.1.0
info:
  title: Roam Research Tools API
  version: 1.0.0
  description: API for interacting with Roam Research tools
servers:
  - url: https://localhost
    description: Local development server
paths:
  /tools:
    get:
      summary: List all available tools
      operationId: toolsGet
      responses:
        '200':
          description: List of available tools
          content:
            application/json:
              schema:
                type: object
                properties:
                  tools:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tool'
  /tools/roam_add_todo:
    post:
      summary: |-
        Add a list of todo items as individual blocks to today's daily page in Roam. Each item becomes its own actionable block with todo status.
      operationId: toolsroam_add_todoPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                todos:
                  type: array
                  items:
                    type: string
                    description: Todo item text
                  description: List of todo items to add
              required:
                - todos
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_fetch_page_by_title:
    post:
      summary: Retrieve complete page contents by exact title, including all nested blocks and resolved block references. Use for reading and analyzing existing Roam pages.
      operationId: toolsroam_fetch_page_by_titlePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the page to fetch and read
              required:
                - title
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_create_page:
    post:
      summary: |-
        Create a new standalone page in Roam with optional content using markdown-style formatting. The nesting structure is inferred from markdown indentation (spaces).
      operationId: toolsroam_create_pagePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Title of the new page
                content:
                  type: string
                  description: Initial content for the page (optional). Each line becomes a separate block. Indentation (using spaces or tabs) determines the nesting level of each block.
              required:
                - title
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_create_block:
    post:
      summary: |-
        Add a new block to an existing Roam page. If no page specified, adds to today's daily note. Best for capturing immediate thoughts, additions to discussions, or content that doesn't warrant its own page. Can specify page by title or UID.
      operationId: toolsroam_create_blockPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Content of the block
                page_uid:
                  type: string
                  description: 'Optional: UID of the page to add block to'
                title:
                  type: string
                  description: 'Optional: Title of the page to add block to (defaults to today''s date if neither page_uid nor title provided)'
              required:
                - content
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_create_outline:
    post:
      summary: |-
        Add a structured outline to an existing page or block (by title text or uid), with customizable nesting levels. Best for:
      operationId: toolsroam_create_outlinePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_title_uid:
                  type: string
                  description: Title (or UID if known) of the page. Leave blank to use the default daily page
                block_text_uid:
                  type: string
                  description: A relevant title heading for the outline (or UID, if known) of the block under which outline content will be nested. If blank, content will be nested under the page title.
                outline:
                  type: array
                  description: Array of outline items with block text and explicit nesting level
                  items:
                    type: object
                    properties:
                      text:
                        type: string
                        description: Content of the block
                      level:
                        type: integer
                        description: Indentation level (1-10, where 1 is top level)
                        minimum: 1
                        maximum: 10
                    required:
                      - text
                      - level
              required:
                - outline
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_import_markdown:
    post:
      summary: Import nested markdown content into Roam under a specific block. Can locate the parent block by UID or by exact string match within a specific page.
      operationId: toolsroam_import_markdownPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
                  description: Nested markdown content to import
                page_uid:
                  type: string
                  description: 'Optional: UID of the page containing the parent block'
                page_title:
                  type: string
                  description: 'Optional: Title of the page containing the parent block (ignored if page_uid provided)'
                parent_uid:
                  type: string
                  description: 'Optional: UID of the parent block to add content under'
                parent_string:
                  type: string
                  description: 'Optional: Exact string content of the parent block to add content under (must provide either page_uid or page_title)'
                order:
                  type: string
                  description: 'Optional: Where to add the content under the parent ("first" or "last")'
                  enum:
                    - first
                    - last
                  default: first
              required:
                - content
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_search_for_tag:
    post:
      summary: 'Search for blocks containing a specific tag and optionally filter by blocks that also contain another tag nearby. Example: Use this to search for memories that are tagged with the MEMORIES_TAG.'
      operationId: toolsroam_search_for_tagPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                primary_tag:
                  type: string
                  description: The main tag to search for (without the [[ ]] brackets)
                page_title_uid:
                  type: string
                  description: 'Optional: Title or UID of the page to search in. Defaults to today''s daily page if not provided'
                near_tag:
                  type: string
                  description: 'Optional: Another tag to filter results by - will only return blocks where both tags appear'
              required:
                - primary_tag
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_search_by_status:
    post:
      summary: Search for blocks with a specific status (TODO/DONE) across all pages or within a specific page.
      operationId: toolsroam_search_by_statusPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: Status to search for (TODO or DONE)
                  enum:
                    - TODO
                    - DONE
                page_title_uid:
                  type: string
                  description: 'Optional: Title or UID of the page to search in. If not provided, searches across all pages'
                include:
                  type: string
                  description: 'Optional: Comma-separated list of terms to filter results by inclusion (matches content or page title)'
                exclude:
                  type: string
                  description: 'Optional: Comma-separated list of terms to filter results by exclusion (matches content or page title)'
              required:
                - status
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_search_block_refs:
    post:
      summary: Search for block references within a page or across the entire graph. Can search for references to a specific block or find all block references.
      operationId: toolsroam_search_block_refsPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                block_uid:
                  type: string
                  description: 'Optional: UID of the block to find references to'
                page_title_uid:
                  type: string
                  description: 'Optional: Title or UID of the page to search in. If not provided, searches across all pages'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_search_hierarchy:
    post:
      summary: Search for parent or child blocks in the block hierarchy. Can search up or down the hierarchy from a given block.
      operationId: toolsroam_search_hierarchyPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                parent_uid:
                  type: string
                  description: 'Optional: UID of the block to find children of'
                child_uid:
                  type: string
                  description: 'Optional: UID of the block to find parents of'
                page_title_uid:
                  type: string
                  description: 'Optional: Title or UID of the page to search in'
                max_depth:
                  type: integer
                  description: 'Optional: How many levels deep to search (default: 1)'
                  minimum: 1
                  maximum: 10
              oneOf:
                - required:
                    - parent_uid
                - required:
                    - child_uid
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/find_pages_modified_today:
    post:
      summary: Find all pages that have been modified today (since midnight).
      operationId: toolsfind_pages_modified_todayPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: {}
              required: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_search_by_text:
    post:
      summary: Search for blocks containing specific text across all pages or within a specific page.
      operationId: toolsroam_search_by_textPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text to search for
                page_title_uid:
                  type: string
                  description: 'Optional: Title or UID of the page to search in. If not provided, searches across all pages'
              required:
                - text
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_update_block:
    post:
      summary: |-
        Update the content of an existing block identified by its UID. Can either provide new content directly or use a transform pattern to modify existing content.
      operationId: toolsroam_update_blockPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                block_uid:
                  type: string
                  description: UID of the block to update
                content:
                  type: string
                  description: New content for the block. If not provided, transform_pattern will be used.
                transform_pattern:
                  type: object
                  description: Pattern to transform the current content. Used if content is not provided.
                  properties:
                    find:
                      type: string
                      description: Text or regex pattern to find
                    replace:
                      type: string
                      description: Text to replace with
                    global:
                      type: boolean
                      description: Whether to replace all occurrences
                      default: true
                  required:
                    - find
                    - replace
              required:
                - block_uid
              oneOf:
                - required:
                    - content
                - required:
                    - transform_pattern
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_update_blocks:
    post:
      summary: |-
        Update multiple blocks in a single batch operation. Each update can provide either new content directly or a transform pattern.
      operationId: toolsroam_update_blocksPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                updates:
                  type: array
                  description: Array of block updates to perform
                  items:
                    type: object
                    properties:
                      block_uid:
                        type: string
                        description: UID of the block to update
                      content:
                        type: string
                        description: New content for the block. If not provided, transform will be used.
                      transform:
                        type: object
                        description: Pattern to transform the current content. Used if content is not provided.
                        properties:
                          find:
                            type: string
                            description: Text or regex pattern to find
                          replace:
                            type: string
                            description: Text to replace with
                          global:
                            type: boolean
                            description: Whether to replace all occurrences
                            default: true
                        required:
                          - find
                          - replace
                    required:
                      - block_uid
                    oneOf:
                      - required:
                          - content
                      - required:
                          - transform
              required:
                - updates
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_search_by_date:
    post:
      summary: Search for blocks or pages based on creation or modification dates
      operationId: toolsroam_search_by_datePost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: Start date in ISO format (YYYY-MM-DD)
                end_date:
                  type: string
                  description: 'Optional: End date in ISO format (YYYY-MM-DD)'
                type:
                  type: string
                  enum:
                    - created
                    - modified
                    - both
                  description: Whether to search by creation date, modification date, or both
                scope:
                  type: string
                  enum:
                    - blocks
                    - pages
                    - both
                  description: Whether to search blocks, pages, or both
                include_content:
                  type: boolean
                  description: Whether to include the content of matching blocks/pages
                  default: true
              required:
                - start_date
                - type
                - scope
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_remember:
    post:
      summary: |-
        Add a memory or piece of information to remember, stored on the daily page with #[[LLM/Memories]] tag and optional categories. 
      operationId: toolsroam_rememberPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                memory:
                  type: string
                  description: The memory or information to remember
                categories:
                  type: array
                  items:
                    type: string
                  description: Optional categories to tag the memory with (will be converted to Roam tags)
              required:
                - memory
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_recall:
    post:
      summary: Retrieve all stored memories by searching for blocks tagged with MEMORIES_TAG and content from the page with the same name. Returns a combined, deduplicated list of memories.
      operationId: toolsroam_recallPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties: {}
              required: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
  /tools/roam_datomic_query:
    post:
      summary: |-
        Execute a custom Datomic query on the Roam graph beyond the available search tools. This provides direct access to Roam's query engine for advanced data retrieval. Note: Roam graph is case-sensitive.
      operationId: toolsroam_datomic_queryPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: The Datomic query to execute (in Datalog syntax)
                inputs:
                  type: array
                  description: Optional array of input parameters for the query
                  items:
                    type: string
              required:
                - query
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    additionalProperties: true
components:
  schemas:
    Tool:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        parameters:
          type: object
          additionalProperties: true
